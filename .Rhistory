holmes_poverty_2021 <- get_acs(geography = "county",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e) %>%
mutate(poverty_rate = round(poverty_below_e/poverty_total_e*100),1))
# Holmes County poverty relative to nation
holmes_poverty_2021 <- get_acs(geography = "county",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e) %>%
mutate(poverty_rate = round(poverty_below_e / poverty_total_e * 100, 1))
# Holmes County poverty relative to nation
holmes_poverty_2021 <- get_acs(geography = "county",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e) %>%
mutate(poverty_rate = round(poverty_below_e/poverty_total_e*100, 1)) %>%
arrange(desc(poverty_rate))
# Holmes County poverty relative to nation
holmes_poverty_2021 <- get_acs(geography = "county",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e) %>%
separate(name, into = c("county", "state"), sep = ", ") %>%
mutate(poverty_rate = round(poverty_below_e/poverty_total_e*100, 1)) %>%
arrange(desc(poverty_rate))
# Holmes County poverty relative to nation
holmes_poverty_2021 <- get_acs(geography = "county",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e) %>%
separate(name, into = c("county", "state"), sep = ", ") %>%
filter(state != "Puerto Rico") %>%
mutate(poverty_rate = round(poverty_below_e/poverty_total_e*100, 1)) %>%
arrange(desc(poverty_rate))
state_poverty_2021 <- get_acs(geography = "state",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e)
View(state_poverty_2021)
# National poverty rates by state
# Finding:
state_poverty_2021 <- get_acs(geography = "state",
variables = c(poverty_total = "B17020_001",
poverty_below = "B17020_002",
poverty_above = "B17020_010"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, poverty_total_e, poverty_below_e) %>%
filter(name != "Puerto Rico") %>%
mutate(poverty_rate = round(poverty_below_e/poverty_total_e*100, 1)) %>%
arrange(desc(poverty_rate))
View(acs_2021)
county_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
output = "wide") %>%
clean_names()
View(county_public_assistance_2021)
# National public assistance rates by county
# Finding:
county_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, public_assistance_total_e, public_assistance_received_e) %>%
separate(name, into = c("county", "state"), sep = ", ") %>%
filter(state != "Puerto Rico") %>%
mutate(public_assistance_rate = round(public_assistance_received_e/public_assistance_total_e*100, 1)) %>%
arrange(desc(public_assistance_rate))
# National public assistance rates by county
# Finding:
county_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
state = "MS",
output = "wide") %>%
clean_names() %>%
select(geoid, name, public_assistance_total_e, public_assistance_received_e) %>%
separate(name, into = c("county", "state"), sep = ", ") %>%
mutate(public_assistance_rate = round(public_assistance_received_e/public_assistance_total_e*100, 1)) %>%
arrange(desc(public_assistance_rate))
# National public assistance rates by county
# Finding:
county_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
state = "MS",
output = "wide") %>%
clean_names() %>%
select(geoid, name, public_assistance_total_e, public_assistance_received_e) %>%
mutate(public_assistance_rate = round(public_assistance_received_e/public_assistance_total_e*100, 1)) %>%
arrange(desc(public_assistance_rate))
county_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide")
# National public assistance rates by county
# Finding:
county_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide") %>%
clean_names() %>%
select(geoid, name, public_assistance_total_e, public_assistance_received_e) %>%
mutate(public_assistance_rate = round(public_assistance_received_e/public_assistance_total_e*100, 1))
# National public assistance rates by county
# Finding:
holmes_public_assistance_2021 <- get_acs(geography = "county",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide") %>%
clean_names() %>%
select(geoid, name, public_assistance_total_e, public_assistance_received_e) %>%
mutate(public_assistance_rate = round(public_assistance_received_e/public_assistance_total_e*100, 1))
View(holmes_public_assistance_2021)
ms_public_assistance_2021 <- get_acs(geography = "state",
variables = c(public_assistance_total = "B22003_001",
public_assistance_received = "B22003_002",
public_assistance_not_received = "B22003_005"),
year = 2021,
state = "MS",
output = "wide") %>%
clean_names() %>%
select(geoid, name, public_assistance_total_e, public_assistance_received_e) %>%
mutate(public_assistance_rate = round(public_assistance_received_e/public_assistance_total_e*100, 1))
View(ms_public_assistance_2021)
public_assistance_2021 <- bind_rows(holmes_public_assistance_2021, ms_public_assistance_2021)
View(public_assistance_2021)
#libraries
library(tidyverse)
library(googlesheets4)
library(janitor)
library(tidycensus)
#install.packages("googlesheets4")
#Authenticating with Google account
#gs4_auth()
# Load Census API key
Sys.setenv(CENSUS_API_KEY = "5cb2b9c628a1d1329c5bf4d36fe4435c6501efc8", overwrite = TRUE)
# Load ACS crosswalk
acs_2021 <- load_variables(2021, "acs5")
# Load 2020 Census crosswalk
census_2020 <- load_variables(2020, "pl", cache = TRUE)
# Helpful references for using ACS and Census APIs: #https://censusreporter.org/topics/table-codes/
#https://walker-data.com/tidycensus/articles/basic-usage.html
#Load football roster scraper. Also did some cleaning for special cases here. For the players who were missing hometown information, this was obtained by looking at rosters from previous years.
football_rosters <- read_csv("football_roster.csv") %>%
clean_names() %>%
mutate(hometown = case_when(
hometown == "Pompano, Beach, Fla." ~ "Pompano Beach, Fla.",
hometown == "Livemore Calif." ~ "Livemore, Calif.",
hometown == "Washington D.C." ~ "Washington, D.C.",
hometown == "Tampa. Fla." ~ "Tampa, Fla.",
hometown == "Upper Marlboro. Md." ~ "Upper Marlboro, Md.",
hometown == "Norfolk,Va." ~ "Norfolk, Va.",
hometown == "Bronx N.Y." ~ "Bronx, N.Y.",
hometown == "Cocoa Fla." ~ "Cocoa, Fla.",
hometown == "Jefferson" ~ "Jefferson Township, NJ",
hometown == "Melbourne" ~ "Melbourne, FL",
hometown == "Chicago" ~ "Chicago, IL",
hometown == "Cincinnati" ~ "Cincinnati, OH",
hometown == "Cleveland" ~ "Cleveland, OH",
hometown == "St. Louis" ~ "St. Louis, MO",
hometown == "Inglewood" ~ "Inglewood, CA",
hometown == "Chatworth, Ga." ~ "Chatsworth, Ga.",
hometown == "Kingland, Ga." ~ "Kingsland, Ga.",
hometown == "East Cobb, GA" ~ "Marietta, GA",
hometown == "Platville, Ala." ~ "Prattville, Ala.",
TRUE ~ hometown)) %>%
mutate(hometown = case_when(
name == "Feyisayo Oluleye" ~ "Lancaster, PA",
name == "Kyle Vaccarella" ~ "Fairfield, CT",
TRUE ~ hometown))
#Let's also use this as a time to load a state crosswalk we'll use later
state_crosswalk <- read_csv("state_crosswalk.csv") %>%
mutate(state_name_caps = str_to_upper(state_name)) %>%
select(state_abb, state_name_caps)
#Let's load some hometowns that we passed through and cleaned with Open Refine
hometowns_open_refine <- read_csv("hometowns_open_refine.csv")
#Checking to see that we have 68 schools and the player counts for each school
# school_check <- football_rosters %>%
#   group_by(school) %>%
#   summarise(total_players = n()) %>%
#   arrange(total_players)
#Checking to make sure there are no duplicate players
# player_check <- football_rosters %>%
#   group_by(name, school) %>%
#   summarise(total = n()) %>%
#   arrange(desc(total))
#CLEANING/STANDARDIZING STATE
#Splitting the hometown column so we can work with the state
football_rosters <- football_rosters %>%
mutate(hometown_cleaning = hometown) %>%
separate(hometown_cleaning, into = c("hometown_city", "hometown_state", "hometown_country"), sep = ", ")
#What kind of values are we getting in hometown_state?
state_check <- football_rosters %>%
group_by(hometown_state) %>%
summarise(total = n()) %>%
arrange(hometown_state)
#Many of those aren't U.S. states. Let's make a new dataframe that only has players from the 50 states:
excluded_states <- c(" Western Australia", "Alberta", "American Samoa", "Australia", "Bahamas", "Belgium", "Canada", "China", "Colombia", "Congo", "County Kerry", "Denmark", "DR of the Congo", "England", "Finland", "France", "Gabon", "Germany", "Ghana", "Ireland", "Japan", "Manitoba", "Mexico", "N.S.", "New South Wales", "New Zealand", "Nigeria", "NSW", "Ont.", "Ontario", "QC", "Que.", "Quebec", "Québec", "Queensland", "Saskatchewan", "Serbia", "South Africa", "South Australia", "Sweden", "Switzerland", "The Netherlands", "Tonga", "United Kingdom", "Victoria", "Victoria AU", "Western Samoa")
football_rosters_usa <- football_rosters %>%
filter(!(hometown_state %in% excluded_states) | is.na(hometown_state)) %>%
mutate(hometown_state = case_when(
hometown_state == "Maui" ~ "HI",
hometown_state == "New York City" ~ "NY",
TRUE ~ hometown_state))
#And now let's recheck those hometown_state values:
state_check_usa <- football_rosters_usa %>%
group_by(hometown_state) %>%
summarise(total = n()) %>%
arrange(hometown_state)
#Let's standardize these to the state postal abbreviation:
#First, let's try removing punctuation and making everything upper case:
football_rosters_usa <- football_rosters_usa %>%
mutate(hometown_state_first_try = str_to_upper(gsub("[[:punct:]]", "", hometown_state)))
#Second, let's see if we can use our crosswalk:
football_rosters_usa <- football_rosters_usa %>%
left_join(state_crosswalk, by=c("hometown_state_first_try" = "state_name_caps"))
football_rosters_usa <- football_rosters_usa %>%
rename(hometown_state_second_try = state_abb)
#Third, let's combine the results of our first two tries and check to see how much that reduced our unique values
football_rosters_usa <- football_rosters_usa %>%
mutate(hometown_state_third_try = ifelse(is.na(hometown_state_second_try), hometown_state_first_try, hometown_state_second_try))
state_check_usa_update <- football_rosters_usa %>%
group_by(hometown_state_third_try) %>%
summarise(total = n()) %>%
arrange(hometown_state_third_try)
#Now we're down to much fewer state values. Let's manually take care of the rest.
football_rosters_usa <- football_rosters_usa %>%
mutate(hometown_state_clean = case_when(
hometown_state_third_try == "ALA" ~ "AL",
hometown_state_third_try == "ARIZ" ~ "AZ",
hometown_state_third_try == "ARK" ~ "AR",
hometown_state_third_try == "CALF" | hometown_state_third_try == "CALIF" ~ "CA",
hometown_state_third_try == "COL" | hometown_state_third_try == "COLO" ~ "CO",
hometown_state_third_try == "CONN" ~ "CT",
hometown_state_third_try == "DEL" ~ "DE",
hometown_state_third_try == "FLA" ~ "FL",
hometown_state_third_try == "ILL" ~ "IL",
hometown_state_third_try == "IND" ~ "IN",
hometown_state_third_try == "KAN" ~ "KS",
hometown_state_third_try == "MASS" ~ "MA",
hometown_state_third_try == "MICH" ~ "MI",
hometown_state_third_try == "MINN" ~ "MN",
hometown_state_third_try == "MISS" ~ "MS",
hometown_state_third_try == "MONT" ~ "MT",
hometown_state_third_try == "NEB" ~ "NE",
hometown_state_third_try == "NEV" ~ "NV",
hometown_state_third_try == "OKLA" ~ "OK",
hometown_state_third_try == "ORE" ~ "OR",
hometown_state_third_try == "PENN" ~ "PA",
hometown_state_third_try == "TENN" ~ "TN",
hometown_state_third_try == "W VA" | hometown_state_third_try == "WVA" ~ "WV",
hometown_state_third_try == "WASH" ~ "WA",
hometown_state_third_try == "WIS" | hometown_state_third_try == "WISC" ~ "WI",
hometown_state_third_try == "WYO" ~ "WY",
TRUE ~ hometown_state_third_try))
#What's the final state breakdown?
football_rosters_usa_states <- football_rosters_usa %>%
group_by(hometown_state_clean) %>%
summarise(total_players=n()) %>%
arrange(desc(total_players))
#STATES WITH POPULATION DATA
#Let's try to add in some population data and try to figure out the number of Power 5 football players per 100,000 residents in a state
#First, let's get ourselves a dataframe that has state postal abbreviations and their most recent ACS state population:
state_pops_2021 <- get_acs(geography = "state",
variables = "B01003_001",
year = 2021)
state_pops_2021 <- state_pops_2021 %>%
clean_names() %>%
mutate(name_caps = str_to_upper(name)) %>%
mutate(name_caps = case_when(
name_caps == "DISTRICT OF COLUMBIA" ~ "WASHINGTON, DC",
TRUE ~ name_caps
)) %>%
left_join(state_crosswalk, by=c("name_caps" = "state_name_caps"))
state_pops_2021 <- state_pops_2021 %>%
select(state_abb, estimate) %>%
filter(!is.na(state_abb)) #Removed NA value, which was Puerto Rico
# Now, let's join our population data to our state count of football players data:
football_rosters_usa_states <- football_rosters_usa_states %>%
inner_join(state_pops_2021, by=c("hometown_state_clean" = "state_abb"))
football_rosters_usa_states <- football_rosters_usa_states %>%
rename(total_pop = estimate)
football_rosters_usa_states <- football_rosters_usa_states %>%
mutate(players_per_hundred_thousand = round((total_players*100000)/total_pop,1)) %>%
arrange(desc(players_per_hundred_thousand))
# CSV
#write_csv(football_rosters_usa_states, file = "state_counts.csv")
# START TO CLEAN/STANDARDIZE HOMETOWNS
# CSV - going to try cleaning this through Open Refine
#write_csv(distinct_hometowns, file = "hometowns_to_clean.csv")
#Join our Open Refine dataframe to our dataframe of Power Five players
hometowns_open_refine_modified <- hometowns_open_refine %>%
select(hometown_city, hometown_city_clean, hometown_state_clean)
football_rosters_usa <- football_rosters_usa %>%
left_join(hometowns_open_refine_modified, by = c("hometown_city", "hometown_state_clean")) %>%
mutate(hometown_city_clean = case_when(
name == 'DJ Uiagalelei' ~ "Riverside",
name == 'AJ Duffy' ~ "Moreno Valley",
name == 'Izayah  Reeves' ~ "Hempstead",
name == 'Jawhar Jordan' ~ "Farmingdale",
name == 'Anthony Gangi' ~ "Oyster Bay",
TRUE ~ hometown_city_clean)) #These lines of code are for two players from Inland Empire, California, a large region of California that includes dozens of incorporated cities, and three players from Long Island, New York.
distinct_hometowns <- football_rosters_usa %>%
group_by(hometown_city_clean, hometown_state_clean) %>%
summarise(total = n())
#From here, the best way to continue working on this will likely be state-by-state
# RACIAL ANALYSIS
hometowns_complete_with_race <- read_csv("hometowns_complete.csv")
# State-by-state Black pop
black_pop_usa_2021 <- get_acs(geography = "state",
variables = c("B01003_001", "B02001_003"),
year = 2021,
output = "wide") %>%
clean_names() %>%
rename(total_pop_state = b01003_001e, black_pop_state = b02001_003e) %>%
mutate(pct_black_state = round(black_pop_state/total_pop_state*100, 1)) %>%
mutate(deep_south = if_else(
name == "Louisiana" | name == "Mississippi" | name == "Alabama" | name == "Georgia" | name == "South Carolina" , "yes", "no")) %>%
mutate(state_name_caps = str_to_upper(name)) %>%
mutate(state_name_caps = case_when(
state_name_caps == "DISTRICT OF COLUMBIA" ~ "WASHINGTON, DC",
TRUE ~ state_name_caps)) %>%
left_join(state_crosswalk, by = "state_name_caps") %>%
select(state_abb, pct_black_state, deep_south) %>%
arrange(desc(pct_black_state))
# Join Black pop to hometowns
hometowns_complete_with_race <- hometowns_complete_with_race %>%
left_join(black_pop_usa_2021, by = c("hometown_state_clean" = "state_abb"))
# Add in some columns for analysis
hometowns_complete_with_race <- hometowns_complete_with_race %>%
mutate(black_pop_vs_state = if_else(
pct_black > pct_black_state, "above", "below or equal")) %>%
mutate(majority_black = if_else(
pct_black > 50, "yes", "no")) %>%
arrange(hometown_city_clean)
# How do towns with Black pop above state average compare to towns with Black pop below state average?
race_analysis_vs_state <- hometowns_complete_with_race %>%
group_by(black_pop_vs_state) %>%
summarise(
sum_total_towns = n(),
sum_total_pop = sum(total_pop),
sum_total_players = sum(total_players)) %>%
mutate(pct_players = round((sum_total_players / sum(sum_total_players)) * 100, 1)) %>%
mutate(players_per_hundred_thousand = round((sum_total_players*1000000)/sum_total_pop,1))
#write_csv(race_analysis_vs_state, file = "race_analysis_vs_state.csv")
# How do majority Black towns compare to minority Black towns?
race_analysis_majority_black <- hometowns_complete_with_race %>%
group_by(majority_black) %>%
summarise(
sum_total_towns = n(),
sum_total_pop = sum(total_pop),
sum_total_players = sum(total_players)) %>%
mutate(pct_players = round((sum_total_players/sum(sum_total_players))*100, 1)) %>%
mutate(players_per_hundred_thousand = round((sum_total_players*1000000)/sum_total_pop,1)) %>%
arrange(desc(majority_black))
#write_csv(race_analysis_majority_black, file = "race_analysis_majority_black.csv")
# What about in the Deep South?
race_analysis_vs_state_deep_south <- hometowns_complete_with_race %>%
filter(deep_south == "yes") %>%
group_by(black_pop_vs_state) %>%
summarise(
sum_total_towns = n(),
sum_total_pop = sum(total_pop),
sum_total_players = sum(total_players)) %>%
mutate(pct_players = round((sum_total_players/sum(sum_total_players))*100, 1)) %>%
mutate(players_per_hundred_thousand = round((sum_total_players*1000000)/sum_total_pop,1))
#write_csv(race_analysis_vs_state_deep_south, file = "race_analysis_vs_state_deep_south.csv")
race_analysis_majority_black_deep_south <- hometowns_complete_with_race %>%
filter(deep_south == "yes") %>%
group_by(majority_black) %>%
summarise(
sum_total_towns = n(),
sum_total_pop = sum(total_pop),
sum_total_players = sum(total_players)) %>%
mutate(pct_players = round((sum_total_players/sum(sum_total_players))*100, 1)) %>%
mutate(players_per_hundred_thousand = round((sum_total_players*1000000)/sum_total_pop,1)) %>%
arrange(desc(majority_black))
#write_csv(race_analysis_majority_black_deep_south, file = "race_analysis_majority_black_deep_south.csv")
View(hometowns_complete_with_race)
View(acs_2021)
holmes_education_2021 <- get_acs(geography = "county",
variables = c(education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide") %>%
clean_names()
View(holmes_education_2021)
# EDUCATION
# Holmes County educational attainment
# Finding:
holmes_education_2021 <- get_acs(geography = "county",
variables = c(education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide") %>%
clean_names() %>%
select(geoid, name, education_total_e, education_hs_e, education_bachelors_e) %>%
mutate(pct_hs_diploma = round(education_hs_e/educaation_total_e*100, 1))
# EDUCATION
# Holmes County educational attainment
# Finding:
holmes_education_2021 <- get_acs(geography = "county",
variables = c(education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide") %>%
clean_names() %>%
select(geoid, name, education_total_e, education_hs_e, education_bachelors_e) %>%
mutate(pct_hs_diploma = round(education_hs_e/education_total_e*100, 1))
# EDUCATION
# Holmes County educational attainment
# Finding:
holmes_education_2021 <- get_acs(geography = "county",
variables = c(education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022"),
year = 2021,
state = "MS",
county = "Holmes County",
output = "wide") %>%
clean_names() %>%
select(geoid, name, education_total_e, education_hs_e, education_bachelors_e) %>%
mutate(pct_hs_diploma = round(education_hs_e/education_total_e*100, 1)) %>%
mutate(pct_bachelors_degree = round(education_bachelors_e/education_total_e*100, 1))
View(acs_2021)
# Mississippi educational attainment
ms_education_2021 <- get_acs(geography = "state",
variables = c(education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022"),
year = 2021,
state = "MS",
output = "wide") %>%
clean_names() %>%
select(geoid, name, education_total_e, education_hs_e, education_bachelors_e) %>%
mutate(pct_hs_diploma = round(education_hs_e/education_total_e*100, 1)) %>%
mutate(pct_bachelors_degree = round(education_bachelors_e/education_total_e*100, 1))
View(ms_education_2021)
# National educational attainment
us_education_2021 <- get_acs(geography = "us",
variables = c(education_total = "B15003_001",
education_hs = "B15003_017",
education_bachelors = "B15003_022"),
year = 2021,
output = "wide") %>%
clean_names() %>%
select(geoid, name, education_total_e, education_hs_e, education_bachelors_e) %>%
mutate(pct_hs_diploma = round(education_hs_e/education_total_e*100, 1)) %>%
mutate(pct_bachelors_degree = round(education_bachelors_e/education_total_e*100, 1))
View(us_education_2021)
# Comparison
# Finding:
education_2021 <- bind_rows(holmes_education_2021, ms_education_2021, us_education_2021)
View(education_2021)
